**Problem 3**
Find number of solutions of a linear equation of n variables
Given a linear equation of n variables, find number of non-negative integer solutions of it. For example,let the given equation be “x + 2y = 5”, solutions of this equation are “x = 1, y = 2”, “x = 5, y = 0” and “x = 1. It may be assumed that all coefficients in given equation are positive integers.

**Solution:**
#include<bits/stdc++.h>
using namespace std;
int countSol(int coeff[], int start,  int end, int rhs) 
{
if (rhs == 0) 
 return 1; 
  int result = 0; 
 for (int i = start; i <= end; i++) 
    if (coeff[i] <= rhs) 
        result += countSol(coeff, i, end  ,rhs - coeff[i]); 
                  return result;
}
// Driver Code

int main()
{
  int coeff[] = {2, 2, 5}; 
 int rhs = 4; 
    int n = sizeof(coeff) / sizeof(coeff[0]); 
   cout << countSol(coeff, 0, n - 1, rhs); 
  return 0; 
}

**Problem 7**
Given four integers a=3, b=5, c=11 and d=13. Find the number which when
added to the numbers a and b the ration changes from a:b to c:d.

**Solution:**

#include <bits/stdc++.h>
using namespace std;
int getX(int a, int b, int c, int d)
{
  int X = (b * c - a * d) / (d - c);
return X;
}
int main()
{
   int a = 3, b = 5, c = 11, d = 13;
  cout << getX(a, b, c, d);
 return 0;
}

**Problem 11**
A program to find day of a given date 

**Solution:**

#include <bits/stdc++.h>

using namespace std;
 

int dayofweek(int d, int m, int y) 
{ 

    static int t[] = { 0, 3, 2, 5, 0, 3,

                       5, 1, 4, 6, 2, 4 }; 

    y -= m < 3; 

    return ( y + y / 4 - y / 100 + 

             y / 400 + t[m - 1] + d) % 7; 
} 

int main() 
{ 

    int day = dayofweek(30, 8, 2010); 

    cout << day; 
 

    return 0; 
} 

**Problem 15**
Write a program to check two circles intersect to each other or not.


**Solution:**

#include <bits/stdc++.h>

using namespace std;
 

int circle(int x1, int y1, int x2, 

           int y2, int r1, int r2)
{

    int distSq = (x1 - x2) * (x1 - x2) +

                 (y1 - y2) * (y1 - y2);

    int radSumSq = (r1 + r2) * (r1 + r2);

    if (distSq == radSumSq)

        return 1;

    else if (distSq > radSumSq)

        return -1;

    else

        return 0;
}

int main()
{

    int x1 = -10, y1 = 8;

    int x2 = 14, y2 = -24;

    int r1 = 30, r2 = 10;

    int t = circle(x1, y1, x2, 

                   y2, r1, r2);

    if (t == 1)

        cout << "Circle touch to"

             << " each other.";

    else if (t < 0)

        cout << "Circle not touch"

             << " to each other.";

    else

        cout << "Circle intersect"

             << " to each other.";

    return 0;
}
